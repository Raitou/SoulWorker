/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')

	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
	compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    
	compile group: 'io.netty', name: 'netty-all', version: '4.1.42.Final'
	
	compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.11.1'
	compile group: 'dev.morphia.morphia', name: 'core', version: '1.5.5'
}

application {
    // Define the main class for the application
    mainClassName = 'dev.spiritworker.SpiritWorker'
}

jar {
    manifest {
        attributes 'Main-Class': 'dev.spiritworker.SpiritWorker'
    }

    jar.baseName = 'spiritworker'

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    from('src/main/java') {
		include '*.xml'
	}

    destinationDir = file(".")
}

